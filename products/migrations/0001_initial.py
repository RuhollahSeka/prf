# Generated by Django 3.2.13 on 2022-09-17 07:02

import django.contrib.postgres.fields.ranges
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128)),
                ('email', models.EmailField(max_length=254)),
                ('contact_phone_number', models.CharField(max_length=32)),
                ('emergency_phone_number', models.CharField(max_length=32)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Component',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=256)),
                ('code', models.CharField(max_length=128)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Dimensions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('length', models.FloatField()),
                ('width', models.FloatField()),
                ('height', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='GHSStatement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=128)),
                ('type', models.CharField(choices=[('precautionary', 'precautionary'), ('hazard', 'hazard')], max_length=32)),
                ('phrase', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('chemical_name', models.CharField(max_length=256)),
                ('n_cas', models.CharField(max_length=256)),
                ('hazard_phrases', models.ManyToManyField(related_name='ingredients', to='products.GHSStatement')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InternationalRegulation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=32, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PalletType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='products', to='products.brand')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ShrinkWrap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Variant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=256)),
                ('code', models.CharField(max_length=128, unique=True)),
                ('description', models.TextField(blank=True)),
                ('barcode', models.CharField(max_length=32)),
                ('carton_barcode', models.CharField(blank=True, max_length=32)),
                ('weight', models.FloatField()),
                ('image', models.FileField(blank=True, max_length=1024, null=True, upload_to='images/variants/')),
                ('additional_information', models.TextField(blank=True)),
                ('components', models.ManyToManyField(related_name='variants', to='products.Component')),
                ('dimensions', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='products.dimensions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=256)),
                ('code', models.CharField(max_length=128, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VariantIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('concentration', models.FloatField()),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.ingredient')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.variant')),
            ],
        ),
        migrations.AddField(
            model_name='variant',
            name='ingredients',
            field=models.ManyToManyField(related_name='variants', through='products.VariantIngredient', to='products.Ingredient'),
        ),
        migrations.AddField(
            model_name='variant',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='products.product'),
        ),
        migrations.CreateModel(
            name='SafetyMeasures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('hazard_phrases', models.TextField(blank=True)),
                ('inhalation_measures', models.TextField(blank=True)),
                ('eye_contact_measures', models.TextField(blank=True)),
                ('skin_contact_measures', models.TextField(blank=True)),
                ('ingestion', models.TextField(blank=True)),
                ('fire_fighting_measures', models.TextField(blank=True)),
                ('individual_precautions', models.TextField(blank=True)),
                ('clean_up_procedures', models.TextField(blank=True)),
                ('storage_conditions', models.TextField(blank=True)),
                ('handling_procedures', models.TextField(blank=True)),
                ('exposure_limits', models.TextField(blank=True)),
                ('period_after_opening', models.TextField(blank=True)),
                ('dangerous_reactions', models.TextField(blank=True)),
                ('toxicological_information', models.TextField(blank=True)),
                ('ecological_information', models.TextField(blank=True)),
                ('disposal_consideration', models.TextField(blank=True)),
                ('general_transport_information', models.TextField(blank=True)),
                ('transport_class', models.TextField(blank=True)),
                ('transport_packing_group', models.TextField(blank=True)),
                ('transport_material_code', models.TextField(blank=True)),
                ('transport_labelling', models.TextField(blank=True)),
                ('general_regulatory_information', models.TextField(blank=True)),
                ('extra_information', models.TextField(blank=True)),
                ('international_regulations', models.ManyToManyField(related_name='safety_measures', to='products.InternationalRegulation')),
                ('precautionary_phrases', models.ManyToManyField(related_name='safety_measures', to='products.GHSStatement')),
                ('variant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='safety_measures', to='products.variant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Pallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('pallet_weight', models.FloatField()),
                ('pallet_wrapping', models.CharField(max_length=256)),
                ('layers_count', models.PositiveSmallIntegerField()),
                ('cartons_per_layer', models.PositiveSmallIntegerField()),
                ('units_per_carton', models.PositiveSmallIntegerField()),
                ('carton_weight', models.FloatField()),
                ('formation_diagram', models.FileField(blank=True, max_length=1024, null=True, upload_to='images/pallets/formations/')),
                ('formation_note', models.TextField(blank=True)),
                ('carton_dimensions', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='carton', to='products.dimensions')),
                ('pallet_dimensions', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='pallet', to='products.dimensions')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='pallets', to='products.pallettype')),
                ('variant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='products.variant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ChemicalProperties',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('physical_state', models.CharField(max_length=64)),
                ('colour', models.CharField(max_length=128)),
                ('odour', models.CharField(max_length=128)),
                ('ph_range', django.contrib.postgres.fields.ranges.DecimalRangeField(blank=True, null=True)),
                ('melting_point', models.FloatField(blank=True, null=True)),
                ('flash_point', models.FloatField(blank=True, null=True)),
                ('explosive_characteristics', models.TextField(blank=True)),
                ('vapour_pressure', models.FloatField()),
                ('density', django.contrib.postgres.fields.ranges.DecimalRangeField(blank=True, null=True)),
                ('solubility', models.TextField(blank=True)),
                ('variant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='products.variant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='brand',
            name='manufacturer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='manufactured_brands', to='products.company'),
        ),
        migrations.AddField(
            model_name='brand',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='owning_brands', to='products.company'),
        ),
        migrations.CreateModel(
            name='Bay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=128, unique=True)),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bays', to='products.warehouse')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BayInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('quantity', models.IntegerField(default=0)),
                ('bay', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventories', to='products.bay')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventories', to='products.variant')),
            ],
            options={
                'unique_together': {('variant', 'bay')},
            },
        ),
    ]
